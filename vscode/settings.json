{
  "workbench.iconTheme": "vscode-icons",
  "editor.bracketPairColorization.enabled": true,
  "editor.renderWhitespace": "boundary",
  "editor.guides.bracketPairs": "active",
  "editor.suggestSelection": "first",
  "vsintellicode.modify.editor.suggestSelection": "automaticallyOverrodeDefaultValue",
  "editor.fontFamily": "JetBrains Mono",
  "editor.fontSize": 13,
  "java.project.importOnFirstTimeStartup": "automatic",
  "files.exclude": {
    "**/.classpath": true,
    "**/.project": true,
    "**/.settings": true,
    "**/.factorypath": true
  },
  "redhat.telemetry.enabled": true,
  "terminal.integrated.defaultProfile.osx": "zsh",
  "cSpell.language": "en,pt-BR",
  "liveServer.settings.donotShowInfoMsg": true,
  "git.autofetch": true,
  "workbench.startupEditor": "none",
  "security.workspace.trust.untrustedFiles": "open",
  "typescript.updateImportsOnFileMove.enabled": "always",
  "javascript.updateImportsOnFileMove.enabled": "always",
  "typescript.tsdk": "./node_modules/typescript/lib",
  "material-icon-theme.activeIconPack": "nest",
  "code-runner.runInTerminal": true,
  "code-runner.executorMap": {
    "javascript": "node",
    "java": "cd $dir && javac $fileName && java $fileNameWithoutExt",
    "c": "cd $dir && gcc $fileName -o $fileNameWithoutExt && $dir$fileNameWithoutExt",
    "cpp": "cd $dir && g++ $fileName -o $fileNameWithoutExt && $dir$fileNameWithoutExt",
    "objective-c": "cd $dir && gcc -framework Cocoa $fileName -o $fileNameWithoutExt && $dir$fileNameWithoutExt",
    "php": "php",
    "python": "python3 -u",
    "perl": "perl",
    "perl6": "perl6",
    "ruby": "ruby",
    "go": "go run",
    "lua": "lua",
    "groovy": "groovy",
    "powershell": "powershell -ExecutionPolicy ByPass -File",
    "bat": "cmd /c",
    "shellscript": "bash",
    "fsharp": "fsi",
    "csharp": "cd $dir && dotnet run $fileName",
    "vbscript": "cscript //Nologo",
    "typescript": "ts-node",
    "coffeescript": "coffee",
    "scala": "scala",
    "swift": "swift",
    "julia": "julia",
    "crystal": "crystal",
    "ocaml": "ocaml",
    "r": "Rscript",
    "applescript": "osascript",
    "clojure": "lein exec",
    "haxe": "haxe --cwd $dirWithoutTrailingSlash --run $fileNameWithoutExt",
    "rust": "cd $dir && rustc $fileName && $dir$fileNameWithoutExt",
    "racket": "racket",
    "scheme": "csi -script",
    "ahk": "autohotkey",
    "autoit": "autoit3",
    "dart": "dart",
    "pascal": "cd $dir && fpc $fileName && $dir$fileNameWithoutExt",
    "d": "cd $dir && dmd $fileName && $dir$fileNameWithoutExt",
    "haskell": "runhaskell",
    "nim": "nim compile --verbosity:0 --hints:off --run",
    "lisp": "sbcl --script",
    "kit": "kitc --run",
    "v": "v run",
    "sass": "sass --style expanded",
    "scss": "scss --style expanded",
    "less": "cd $dir && lessc $fileName $fileNameWithoutExt.css",
    "FortranFreeForm": "cd $dir && gfortran $fileName -o $fileNameWithoutExt && $dir$fileNameWithoutExt",
    "fortran-modern": "cd $dir && gfortran $fileName -o $fileNameWithoutExt && $dir$fileNameWithoutExt",
    "fortran_fixed-form": "cd $dir && gfortran $fileName -o $fileNameWithoutExt && $dir$fileNameWithoutExt",
    "fortran": "cd $dir && gfortran $fileName -o $fileNameWithoutExt && $dir$fileNameWithoutExt"
  },
  "vim.hlsearch": true,
  "vim.showmodename": true,
  "vim.smartRelativeLine": true,
  "vim.insertModeKeyBindingsNonRecursive": [
    {
      "before": [
        "j",
        "j"
      ],
      "after": [
        "<ESC>"
      ]
    }
  ],
  "vim.normalModeKeyBindingsNonRecursive": [
    {
      "before": [
        "J"
      ],
      "after": [
        "5",
        "j"
      ]
    },
    {
      "before": [
        "K"
      ],
      "after": [
        "5",
        "k"
      ]
    },
    {
      "before": [
        "<Leader>",
        "j"
      ],
      "after": [
        "J"
      ]
    },
    {
      "before": [
        "<C-h>"
      ],
      "after": [
        "<C-w>",
        "h"
      ]
    },
    {
      "before": [
        "<C-j>"
      ],
      "after": [
        "<C-w>",
        "j"
      ]
    },
    {
      "before": [
        "<C-k>"
      ],
      "after": [
        "<C-w>",
        "k"
      ]
    },
    {
      "before": [
        "<C-l>"
      ],
      "after": [
        "<C-w>",
        "l"
      ]
    },
    {
      "before": [
        "<Leader>",
        "t",
        "t"
      ],
      "commands": [
        ":tabnew"
      ]
    },
    {
      "before": [
        "<Leader>",
        "t",
        "n"
      ],
      "commands": [
        ":tabnext"
      ]
    },
    {
      "before": [
        "<Leader>",
        "t",
        "p"
      ],
      "commands": [
        ":tabprev"
      ]
    },
    {
      "before": [
        "<Leader>",
        "t",
        "o"
      ],
      "commands": [
        ":tabo"
      ]
    },
    {
      "before": [
        "<Leader>",
        "p"
      ],
      "commands": [
        "workbench.action.showCommands",
      ]
    },
    {
      "before": [
        "<Leader>",
        "f"
      ],
      "commands": [
        "editor.action.formatDocument",
      ]
    }
  ],
  "vim.leader": "<Space>",
  "vetur.format.defaultFormatter.js": "none",
  "vetur.format.defaultFormatter.ts": "none",
  "explorer.compactFolders": false,
  "eslint.codeActionsOnSave.rules": [
    ".eslintrc.json",
    ".eslintignore",
    "./.eslintrc.json"
  ],
  "tailwindCSS.emmetCompletions": true,
  "editor.inlineSuggest.enabled": true,
  "editor.quickSuggestions": {
    "strings": true
  },
  "css.validate": false,
  "[typescript]": {
    "editor.defaultFormatter": "dbaeumer.vscode-eslint"
  },
  "editor.minimap.enabled": false,
  "typescript.enablePromptUseWorkspaceTsdk": true,
  "eslint.workingDirectories": [
    {
      "directory": "./eslintrc.json"
    }
  ],
  "typescript.format.enable": false,
  "javascript.format.enable": false,
  "typescript.preferences.quoteStyle": "single",
  "workbench.colorTheme": "Ayu Mirage Bordered",
  "vim.camelCaseMotion.enable": true,
  "itunes.skipTrackByTrackDislike": false,
  "itunes.titleStringLimit": 20,
  "json.format.enable": false,
  "javascript.format.semicolons": "remove",
  "typescript.format.semicolons": "remove",
  "eslint.format.enable": true,
  "javascript.preferences.useAliasesForRenames": false,
  "typescript.preferences.useAliasesForRenames": false,
  "cSpell.userWords": [
    "alura",
    "Formik"
  ],
  "[typescriptreact]": {
    "editor.defaultFormatter": "dbaeumer.vscode-eslint"
  }
}
